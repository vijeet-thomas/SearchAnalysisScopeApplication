//Script GUID:79fc422f-819e-4f92-b697-9ede6ca8e846
//Used for tracking history

#DECLARE endDate DateTime = IF("@@endDate@@".StartsWith("@@"), DateTime.UtcNow.AddDays( - 3), DateTime.Parse("@@endDate@@"));
#DECLARE startDate1Day DateTime = @endDate;//.AddDays(-31);
#DECLARE endDateString string = @endDate.ToString("yyyy-MM-dd");
#DECLARE startDate1DayString string = @startDate1Day.ToString("yyyy-MM-dd");
#DECLARE rootFolder string = @"/shares/asimov.prod.data/PublicPartner/Processed/ACE/Search/SearchMetrics";
//#DECLARE outputBusinessDaily string  = string.Format("{0}/BusinessMetricsUniversal_{1:yyyy}_{1:MM}_{1:dd}.ss",@rootFolder,@endDate);
#DECLARE outputSearchesAggDaily string  = string.Format("{0}/SearchesAggDaily_{1:yyyy}_{1:MM}_{1:dd}.ss",@rootFolder,@endDate);

searchProductsDaily =
    VIEW @"/shares/asimov.prod.data/Public/Processed/UINavigation/Kpis/UniversalStoreInsights/UniversalStore_Search/UniversalStore_SearchProduct.view"
    PARAMS
    (
        startDate = @startDate1DayString,
        endDate = @endDateString
    )
;

BaseDataDaily =
    SELECT SearchTerm.ToLower().Trim() AS SearchTerm,
           //DateId AS Timestamp,
           ProductId,
           ProductDisplayName,
           SlotNumber,
           IsClicked,
           PageImpressionGuid,
           CVFull.Split('.')[0] AS CVRoot,
           //Country AS Market,
           UserIdFull.ToLower() AS UserIdFull,
           AttemptedInstalls IS NULL? 0 : AttemptedInstalls AS AttemptedInstalls,
           StartedPurchaseFlow_Free IS NULL? 0 : StartedPurchaseFlow_Free AS StartedPurchaseFlow_Free,
           StartedPurchaseFlow_Paid IS NULL? 0 : StartedPurchaseFlow_Paid AS StartedPurchaseFlow_Paid,
           StartedPurchaseFlow_Trial IS NULL? 0 : StartedPurchaseFlow_Trial AS StartedPurchaseFlow_Trial,
           ResultingSuccessfulAcquisitions_Free IS NULL? 0 : ResultingSuccessfulAcquisitions_Free AS ResultingSuccessfulAcquisitions_Free,
           ResultingSuccessfulAcquisitions_Paid IS NULL? 0 : ResultingSuccessfulAcquisitions_Paid AS ResultingSuccessfulAcquisitions_Paid,
           ResultingSuccessfulAcquisitions_Trial IS NULL? 0 : ResultingSuccessfulAcquisitions_Trial AS ResultingSuccessfulAcquisitions_Trial
    FROM searchProductsDaily
    WHERE
    IsTest != 1
    AND SearchType == "Regular"
    AND IsFinalSearch == true
    AND DeviceClass == "Windows.Desktop"
;

SearchesDaily =
    SELECT //Timestamp, 
           SearchTerm,
           //Market,
           COUNT(DISTINCT CVRoot) AS TotalSearches
    FROM BaseDataDaily;

SearchClicksAndInstallsDaily = SELECT SearchTerm, 
                                      //Market,
                                      CVRoot,
                            COUNT(DISTINCT CVRoot) AS Clicks,
                            SUM(StartedPurchaseFlow_Free) + SUM(StartedPurchaseFlow_Paid) + SUM(StartedPurchaseFlow_Trial) + SUM(AttemptedInstalls) AS Installs
                          FROM BaseDataDaily
                          WHERE IsClicked == true;

TotalClicksAndInstallsDaily =
    SELECT //Timestamp, 
           SearchTerm,
           //Market,
           SUM(Clicks) AS TotalClicks,
           SUM(Installs) AS TotalInstalls
    FROM SearchClicksAndInstallsDaily;

SearchesAggDaily = 
    SELECT a.*,
           b.TotalClicks,
           b.TotalInstalls,
           SUM(TotalInstalls) * 100.0 / SUM(TotalSearches) AS ConversionPercentage,
           SUM(TotalClicks) * 100.0 / SUM(TotalSearches) AS CTRPercentage
    FROM SearchesDaily AS a LEFT JOIN TotalClicksAndInstallsDaily AS b ON a.SearchTerm == b.SearchTerm;// AND a.Market == b.Market AND a.Timestamp == b.Timestamp;

OUTPUT SearchesAggDaily TO SSTREAM @outputSearchesAggDaily
  CLUSTERED BY SearchTerm
        SORTED BY TotalSearches DESC, TotalClicks DESC, TotalInstalls DESC;

//BusinessMetricOverviewDaily = 
//    SELECT 
//           //Timestamp, 
//           //Market,
//           SearchTerm,
//           SUM(TotalSearches) AS TotalSearches,
//           SUM(TotalClicks) AS TotalClicks,
//           SUM(TotalInstalls) AS TotalInstalls,
//           SUM(TotalInstalls) * 100.0 / SUM(TotalSearches) AS ConversionPercentage,
//           SUM(TotalClicks) * 100.0 / SUM(TotalSearches) AS CTRPercentage
//    FROM SearchesAggDaily;
//
//OUTPUT BusinessMetricOverviewDaily
//TO SSTREAM @outputBusinessDaily;