// Copyright (C) Microsoft Corporation. All rights reserved.
// Script GUID:1010a08a-4faa-4941-bb81-19d6f8b3d3e0
// Used for tracking history
//
REFERENCE @"/shares/asimov.prod.data/PublicPartner/Processed/ACE/Store/Catalog/Libraries/netstandard.dll";
REFERENCE @"/shares/asimov.prod.data/PublicPartner/Processed/ACE/Store/Catalog/Libraries/Newtonsoft.Json.dll";

USING Newtonsoft.Json;
USING Newtonsoft.Json.Converters;
USING Newtonsoft.Json.Linq;

#DECLARE firstDay DateTime = new DateTime(2023, 4, 1);
#DECLARE lastDay DateTime = new DateTime(2023, 6, 30);
#DECLARE firstDayString string = @firstDay.ToString("yyyy-MM-dd");
#DECLARE lastDayString string = @lastDay.ToString("yyyy-MM-dd");

#DECLARE outputRoot string = @"users/vijeetthomas/ConversionNumbers/";
#DECLARE outputStreamPerSearch string = string.Format("{0}/SFA_PageImpressions_EndToEnd_1.ss", @outputRoot);
#DECLARE outputInterStreamPerSearch string = string.Format("{0}/SFA_PageImpressions_EndToEnd_IntermediateStream.ss", @outputRoot);
#DECLARE streamExpiryString string = "60";
#DECLARE SFAView string = @"shares/asimov.prod.data/Public/Processed/UINavigation/Kpis/UniversalStoreInsights/SFA_PageImpressions/SFA_PageImpressions/SFA_PageImpressions.view";
SET @@FeaturePreviews = "EnableJsonIntrinsics:on";

AllSearches =
    SELECT *
    FROM
    (
        SSTREAM @outputInterStreamPerSearch
    );


AllSearches = 
    SELECT *,
           ScopeJson.Parse<string> (ActionsData, "contentId") AS ActionsContentId   
    FROM AllSearches
    WHERE !string.IsNullOrEmpty(ActionsData);

Searches = SELECT DateId,
           COUNT (DISTINCT ImpressionGuid) AS SearchImpressions,
           COUNT (DISTINCT CVRoot) AS SearchSessions
    FROM AllSearches
    WHERE PageName == "searchPage" OR  Nav_CustomAttribute_2 == "AutoSuggest";

Clicks = SELECT DateId,
           COUNT (DISTINCT ImpressionGuid) AS ClicksImpressions,
           COUNT (DISTINCT CVRoot) AS UniqueClicksSessions
    FROM AllSearches
    WHERE (PageName == "pdp" AND Ref_PageName == "searchPage" AND Ref_AreaName == "SearchVerticalTileList") OR ( PageName == "pdp" AND Ref_AreaName == "AutoSuggest");

Installs = SELECT DateId,
           COUNT (DISTINCT ImpressionGuid) AS InstallsImpressions,
           COUNT (DISTINCT CVRoot) AS UniqueInstallSessions,
           (SUM (AttemptedAcquisitionCount) + SUM (InstallClicks)) AS AllInstallSessions
    FROM AllSearches
    WHERE (  (    (PageName == "pdp" AND Ref_PageName == "searchPage" AND Ref_AreaName == "SearchVerticalTileList")  //Regular
                OR (PageName == "pdp" AND Ref_AreaName == "AutoSuggest")  ) //Autosuggest
               AND (AttemptedAcquisitionCount > 0 OR InstallClicks > 0)  ) ;
         // OR (PageName == "searchPage" AND (ActionsContentId == "CallToActionButton" OR ActionsContentId == "CallToActionButton_Free") AND (AttemptedAcquisitionCount > 0 OR InstallClicks >0)); //Inline Install

SearchSummary = 
    SELECT a.*,
           b.*.Except(DateId),
           c.*.Except(DateId),
           (ClicksImpressions*100.0/SearchImpressions) AS CTRImpressions,
           (InstallsImpressions*100.0/SearchImpressions) AS ConversionImpressions,
           (UniqueClicksSessions*100.0/SearchSessions) AS CTRSessions,
           (UniqueInstallSessions*100.0/SearchSessions) AS ConversionSessions,
           (ClicksImpressions*100.0/SearchSessions) AS AllClicksCTRSessions,
           (AllInstallSessions*100.0/SearchSessions) AS AllInstallsConversionSessions
    FROM Searches AS a 
         INNER JOIN Clicks AS b 
            ON a.DateId == b.DateId
         INNER JOIN Installs AS c
            ON a.DateId == c.DateId
;

OUTPUT SearchSummary TO SSTREAM @outputStreamPerSearch
CLUSTERED BY DateId
SORTED BY DateId DESC;
