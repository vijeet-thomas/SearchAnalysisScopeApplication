//Script GUID:3109ae9a-8246-441d-8260-c2915d284ae6
//Used for tracking history

#DECLARE appUsageViewPath string = "/shares/asimov.prod.data/Public/Processed/Usage/AppUsage/AppUsageMetrics/AppUsageMetricsByOsmajorApp_v06.view";
#DECLARE appmonikerProductIdMapper string = @"/shares/asimov.prod.data/Public/Processed/Common/Dimensions/Application/AppMonikerProductIdDictionary.ss";
#DECLARE win32Mapper string = @"/shares/asimov.prod.data/PublicPartner/Processed/ACE/StoreAnalytics/Launches/SparkProductIdToAppMonikerMapping.ss";

MODULE "/shares/asimov.prod.data/Public/Resources/Latest/Dimensions/CommonDimensions.module" AS CommonDimensions;
#DECLARE dimGeographyView string = @"/shares/asimov.prod.data/Public/Processed/Common/Dimensions/DimGeography/DimGeography.view";

#DECLARE dimAppView string = @"/shares/asimov.prod.data/Public/Processed/Common/Dimensions/DimApp/DimApp.view"; 
#DECLARE dimAppViewVersion string = "V9";
#DECLARE MadMaxThreshold int = 1000000;

// --------------------------------------------------------------------------------------------------------------------
// Variables and Defaults
// --------------------------------------------------------------------------------------------------------------------
#DECLARE endDate DateTime = IF("@@endDate@@".StartsWith("@@"), DateTime.UtcNow.AddDays(-3), DateTime.Parse("@@endDate@@"));

// Output
#DECLARE outputRoot string = @"/users/vijeetthomas/";
//#DECLARE outputRoot string = @"/users/vijeetthomas/Search/RelevanceScore/";
#DECLARE outputStream_AppUsagedata string = string.Format("{0}/{1:yyyy}/{1:MM}/AppUsagedata_{1:yyyy}_{1:MM}_{1:dd}.ss", @outputRoot.TrimEnd(new[]{ '/' }), @endDate);
#DECLARE streamExpiryString string = "30";

dimGeography = VIEW @dimGeographyView
PARAMS
(
version = "V3"
);

agv1 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 1).Year, DateTime.UtcNow.AddMonths( - 1).Month, 15),//.AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 1).Year, DateTime.UtcNow.AddMonths( - 1).Month, 15)//.AddMonths(1).AddDays(-1)
	);

agv2 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 2).Year, DateTime.UtcNow.AddMonths( - 2).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 2).Year, DateTime.UtcNow.AddMonths( - 2).Month, 1).AddMonths(1).AddDays(-1)
	);

agv3 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 3).Year, DateTime.UtcNow.AddMonths( - 3).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 3).Year, DateTime.UtcNow.AddMonths( - 3).Month, 1).AddMonths(1).AddDays(-1)
	);

agv4 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 4).Year, DateTime.UtcNow.AddMonths( - 4).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 4).Year, DateTime.UtcNow.AddMonths( - 4).Month, 1).AddMonths(1).AddDays(-1)
	);

agv5 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 5).Year, DateTime.UtcNow.AddMonths( - 5).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 5).Year, DateTime.UtcNow.AddMonths( - 5).Month, 1).AddMonths(1).AddDays(-1)
	);

agv6 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 6).Year, DateTime.UtcNow.AddMonths( - 6).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 6).Year, DateTime.UtcNow.AddMonths( - 6).Month, 1).AddMonths(1).AddDays(-1)
	);

agv7 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 7).Year, DateTime.UtcNow.AddMonths( - 7).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 7).Year, DateTime.UtcNow.AddMonths( - 7).Month, 1).AddMonths(1).AddDays(-1)
	);

agv8 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 8).Year, DateTime.UtcNow.AddMonths( - 8).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 8).Year, DateTime.UtcNow.AddMonths( - 8).Month, 1).AddMonths(1).AddDays(-1)
	);

agv9 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 9).Year, DateTime.UtcNow.AddMonths( - 9).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 9).Year, DateTime.UtcNow.AddMonths( - 9).Month, 1).AddMonths(1).AddDays(-1)
	);

agv10 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 10).Year, DateTime.UtcNow.AddMonths( - 10).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 10).Year, DateTime.UtcNow.AddMonths( - 10).Month, 1).AddMonths(1).AddDays(-1)
	);

agv11 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 11).Year, DateTime.UtcNow.AddMonths( - 11).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 11).Year, DateTime.UtcNow.AddMonths( - 11).Month, 1).AddMonths(1).AddDays(-1)
	);

agv12 = 
VIEW @appUsageViewPath
    PARAMS
    (
        startDate = new DateTime(DateTime.UtcNow.AddMonths( - 12).Year, DateTime.UtcNow.AddMonths( - 12).Month, 1).AddMonths(1).AddDays(-1),
        endDate = new DateTime(DateTime.UtcNow.AddMonths( - 12).Year, DateTime.UtcNow.AddMonths( - 12).Month, 1).AddMonths(1).AddDays(-1)
	);

agv1 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv1;

agv2 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv2;

agv3 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv3;

agv4 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv4;

agv5 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv5;

agv6 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv6;

agv7 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv7;

agv8 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv8;

agv9 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv9;

agv10 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv10;

agv11 =
    SELECT AppMoniker,
           CountryName,
           SUM(ActiveUserCount28Day) AS MAU28,
           SUM(ActiveUserCount30Day) AS MAU30,
           SUM(ActiveDeviceCount28Day) AS MAD28,
           SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv11;

agv12 =
    SELECT  AppMoniker,
            CountryName,
            SUM(ActiveUserCount28Day) AS MAU28,
            SUM(ActiveUserCount30Day) AS MAU30,
            SUM(ActiveDeviceCount28Day) AS MAD28,
            SUM(ActiveDeviceCount30Day) AS MAD30
    FROM agv12;

agv = SELECT * FROM agv1 
          UNION
      SELECT * FROM agv2
          UNION
      SELECT * FROM agv3
          UNION
      SELECT * FROM agv4
          UNION
      SELECT * FROM agv5
          UNION
      SELECT * FROM agv6
          UNION
      SELECT * FROM agv7
          UNION
      SELECT * FROM agv8
          UNION
      SELECT * FROM agv9
          UNION
      SELECT * FROM agv10
          UNION
      SELECT * FROM agv11
          UNION
      SELECT * FROM agv12;

agv =
    SELECT AppMoniker,
           CountryName,
           ISO2CharCountryCode AS Market,
           AVG(MAU28) AS AvgMAU28,
           AVG(MAU30) AS AvgMAU30,
           AVG(MAD28) AS AvgMAD28,
           AVG(MAD30) AS AvgMAD30
    FROM agv LEFT JOIN dimGeography ON ISOCountryShortName == CountryName;

agv = SELECT DISTINCT * FROM agv;

agv =
    SELECT *,
           AppMoniker.Trim().ToLower() AS AppMonikerCleaned
    FROM agv
    WHERE !string.IsNullOrEmpty(AppMoniker);

dimApp =
    VIEW @dimAppView
    PARAMS
    (
       version = @dimAppViewVersion
    );

dimAppFiltered =
    SELECT AppMoniker.Trim().ToLower() AS AppMonikerCleaned,
           AppId,
           OneStoreProductId AS ProductId
    FROM dimApp
    WHERE AppName != "" 
          AND PublisherType != ""
          AND AppType == "Modern"
          AND !string.IsNullOrEmpty(AppMoniker);

storeMapper =
    SELECT *,
           AppMoniker.Trim().ToLower() AS AppMonikerCleaned
    FROM
    (
        SSTREAM @win32Mapper
    );

appUsageByProductId =
    SELECT a.*,
           !String.IsNullOrEmpty(m.ProductId) ? s.ProductId : m.ProductId AS ProductId
    FROM agv AS a
         LEFT JOIN
             dimAppFiltered AS m
         ON a.AppMonikerCleaned == m.AppMonikerCleaned
         LEFT JOIN
              storeMapper AS s
         ON a.AppMonikerCleaned == s.AppMonikerCleaned;     
    
appUsageByProductId = 
SELECT DISTINCT *
FROM appUsageByProductId;
//WHERE ProductId IS NOT NULL;

appUsageByProductId =
SELECT AppMonikerCleaned,
       ProductId,
       Market,
       SUM(AvgMAD28) > @MadMaxThreshold ? @MadMaxThreshold : SUM(AvgMAD28) AS MadCountCleaned
FROM appUsageByProductId
GROUP BY AppMonikerCleaned, ProductId, Market;

OUTPUT appUsageByProductId TO SSTREAM @outputStream_AppUsagedata
CLUSTERED BY ProductId,
            Market
SORTED BY MadCountCleaned DESC
WITH STREAMEXPIRY "30";