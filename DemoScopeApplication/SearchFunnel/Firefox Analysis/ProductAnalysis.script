// Copyright (C) Microsoft Corporation. All rights reserved.
// Script GUID:e75d0a08-4b5c-4e66-ae63-80e1d4c7debb
// Used for tracking history
#DECLARE endDate DateTime = IF("@@endDate@@".StartsWith("@@"), DateTime.UtcNow.AddDays( - 3), DateTime.Parse("@@endDate@@"));
#DECLARE startDate1Day DateTime = @endDate.AddDays(-30);
#DECLARE endDateString string = @endDate.ToString("yyyy-MM-dd");
#DECLARE startDate1DayString string = @startDate1Day.ToString("yyyy-MM-dd");
//#DECLARE rootFolder string = @"/users/vijeetthomas/SearchFunnel/";
#DECLARE rootFolder string = @"/users/vijeetthomas/SearchConversionAnalysis";
#DECLARE inputBaseDataApril string  = string.Format("{0}/BaseDataApril.ss",@rootFolder,@endDate);
#DECLARE inputBaseDataMarch string  = string.Format("{0}/BaseDataMarch.ss",@rootFolder,@endDate);

#DECLARE outputComparisonStream3 string = string.Format("{0}/Firefox/ProductAnalysis.ss", @rootFolder);

BaseDataMarch =
    SELECT *
    FROM
    (
        SSTREAM @inputBaseDataMarch
    )
    WHERE SlotNumber == 0;

SearchesMarch =
    SELECT SearchTerm,
           ProductId,
           ProductDisplayName,
           COUNT(DISTINCT CVRoot) AS TotalSearchesMarch
    FROM BaseDataMarch    
;

SearchClicksAndInstallsMarch = SELECT  SearchTerm,
                                        ProductId,
                                        ProductDisplayName,
                                       COUNT (DISTINCT CVRoot) AS Clicks,
                           //SUM(AttemptedAcquisitionOrInstall) AS Installs
                                       SUM(StartedPurchaseFlow_Free) + SUM(StartedPurchaseFlow_Paid) + SUM(StartedPurchaseFlow_Trial) + SUM(AttemptedInstalls) AS Installs
                            
                          FROM BaseDataMarch
                          WHERE IsClicked == true;
                          

TotalCLicksAndInstallsMarch = 
 SELECT  SearchTerm,
           ProductId,
           ProductDisplayName,
        SUM(Clicks) AS Clicks,
        SUM(Installs) AS Installs
        FROM SearchClicksAndInstallsMarch;

MarchData =
    SELECT a.*,
           b.Clicks AS ClicksMarch,
           b.Installs AS InstallsMarch,
           (b.Clicks*100.0/a.TotalSearchesMarch) AS CTRPercentageMarch,
           (b.Installs*100.0/a.TotalSearchesMarch) AS ConversionPercentageMarch
    FROM SearchesMarch AS a
         INNER JOIN
        TotalCLicksAndInstallsMarch AS b
        ON a.SearchTerm == b.SearchTerm AND
           a.ProductId == b.ProductId
           AND a.ProductDisplayName == b.ProductDisplayName
        
;

BaseDataApril1 =
    SELECT *
    FROM
    (
        SSTREAM @inputBaseDataApril
    )
    WHERE SlotNumber == 0;

SearchesApril1 =
    SELECT SearchTerm,
           ProductId,
           ProductDisplayName,
           COUNT(DISTINCT CVRoot) AS TotalSearchesApril
    FROM BaseDataApril1    
;

SearchClicksAndInstallsApril1 = SELECT  SearchTerm,
                                        ProductId,
                                        ProductDisplayName,
                                       COUNT (DISTINCT CVRoot) AS Clicks,
                           //SUM(AttemptedAcquisitionOrInstall) AS Installs
                                       SUM(StartedPurchaseFlow_Free) + SUM(StartedPurchaseFlow_Paid) + SUM(StartedPurchaseFlow_Trial) + SUM(AttemptedInstalls) AS Installs
                            
                          FROM BaseDataApril1
                          WHERE IsClicked == true;
                          

TotalCLicksAndInstallsApril1 = 
 SELECT  SearchTerm,
           ProductId,
           ProductDisplayName,
        SUM(Clicks) AS Clicks,
        SUM(Installs) AS Installs
        FROM SearchClicksAndInstallsApril1;

AprilData =
    SELECT a.*,
           b.Clicks AS ClicksApril,
           b.Installs AS InstallsApril,
           (b.Clicks*100.0/a.TotalSearchesApril) AS CTRPercentageApril,
           (b.Installs*100.0/a.TotalSearchesApril) AS ConversionPercentageApril
    FROM SearchesApril1 AS a
         INNER JOIN
        TotalCLicksAndInstallsApril1 AS b
        ON a.SearchTerm == b.SearchTerm AND
           a.ProductId == b.ProductId
           AND a.ProductDisplayName == b.ProductDisplayName
;

ComparisonStream =
    SELECT a.*,
           b.*.Except( SearchTerm, ProductId, ProductDisplayName),
           (b.CTRPercentageApril - a.CTRPercentageMarch) AS CTRDiff,
           (b.ConversionPercentageApril - a.ConversionPercentageMarch) AS ConversionDiff
    FROM MarchData AS a
    LEFT JOIN AprilData AS b ON a.ProductId == b.ProductId AND 
                                 a.SearchTerm == b.SearchTerm
                                   AND a.ProductDisplayName == b.ProductDisplayName
                              WHERE TotalSearchesMarch > 100;

OUTPUT ComparisonStream TO SSTREAM @outputComparisonStream3
CLUSTERED BY SearchTerm,
             ProductId,
           ProductDisplayName
SORTED BY TotalSearchesMarch DESC;
