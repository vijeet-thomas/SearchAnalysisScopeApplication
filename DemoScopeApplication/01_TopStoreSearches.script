
//Script GUID:b6abfda2-bd3c-4d00-a103-bd8d711bf3ac
//Used for tracking history

/// <summary>
/// This script is used for getting Store Searches from Universal Search Stream
/// Month end streams are used for last 12 months ( 6 months data available at the time of creation )
/// Current Month'sToDate data is combined to show the trend of searches
/// </summary>

//Modules & References
MODULE "/shares/PXSCosmos15.Prod/PXS.DeleteSignal.PROD/PrivacyAnnotation/PrivacyAnnotation.module";
USING System.Globalization;

MODULE "/shares/asimov.prod.data/PublicPartner/Processed/ACE/CSV/AppPackageMappingModule.module" AS AppPackageMappingModule;
MODULE @"/shares/asimov.prod.data/PublicPartner/Processed/ACE/CSV/AppsCommonScriptUtilsModule.module";

// Reference for DynamicView DLL
REFERENCE @"/shares/asimov.prod.data/PublicPartner/Staging/PTPApps/DynamicViewResolver.dll";
// --------------------------------------------------------------------------------------------------------------------
// Date Parameters

#IF("@@endDate@@".StartsWith("@@"))
    #DECLARE endDate DateTime = DateTime.UtcNow;
#ELSE 
    #DECLARE endDate DateTime = DateTime.Parse("@@endDate@@");
#ENDIF

#DECLARE streamEndDate DateTime   = @endDate.AddDays(-3);
#DECLARE streamStartDate DateTime = new DateTime(@streamEndDate.Year, @streamEndDate.Month, 1);

#DECLARE streamEndDateString string   = @streamEndDate.ToString("yyyy-MM-dd");
#DECLARE streamStartDateString string = @streamStartDate.ToString("yyyy-MM-dd");

// stream Path Parameters
#DECLARE rootFolder string = "/shares/asimov.prod.data/PublicPartner/Processed/ACE/StoreSearches";
#DECLARE outputFolder string = "/users/vijeetthomas/SearchFunnel/";

#DECLARE searchTermsHistoryPath string = string.Format("{0}/Daily/TopSearches_%Y_%M_%D.ss", @outputFolder); 
#DECLARE outputTopSearches_Daily string      = string.Format("{0}/Daily/TopSearchesUS_%Y_%m_%d.ss?date={1}", @outputFolder,@streamEndDateString);
#DECLARE outputTopSearches_YTD string      = string.Format("{0}/TopSearchesUS_YTD.ss", @outputFolder);
#DECLARE outputTotalTokens string      = string.Format("{0}/Daily/TotalTokens_%Y_%m_%d.ss?date={1}", @outputFolder,@streamEndDateString);

#DECLARE streamExpiry string = "30";
// --------------------------------------------------------------------------------------------------------------------

// This view will be used to get searches for the Month
searchView =
    VIEW "/shares/asimov.prod.data/Public/Processed/UINavigation/Kpis/UniversalStoreInsights/UniversalStore_Search/UniversalStore_Searches.view"
    PARAMS
    (
        startDate = @streamStartDateString,
        endDate = @streamEndDateString
    );

// Lower casing fields used for joins
searches =
    SELECT @streamEndDate.ToString("yyyyMM") AS YearMonth,
           SearchTerm.ToLower().Trim() AS SearchTerm,
           PageImpressionGuid
    FROM searchView
    WHERE !string.IsNullOrEmpty(SearchTerm)
          AND IsTest!= 1  
          AND IsFinalSearch 
          AND SearchType == "Regular"
          AND DeviceClass == "Windows.Desktop"
;

// Search Count for current month
SearchesAgg = 
    SELECT YearMonth,
           SearchTerm,
           COUNT(DISTINCT PageImpressionGuid) AS SearchCount
    FROM searches;

// Ranking the searchterms by searcount
SearchesRanked = 
    SELECT YearMonth,
           SearchTerm,
           SearchCount,
           RANK() OVER(ORDER BY SearchCount DESC) AS RankBySearchCount
    FROM SearchesAgg;

// Getting the top 1000 Records for current month
TopSearches_CurrentMonth = 
    SELECT YearMonth,
           SearchTerm,
           SearchCount,
           Helper.numberOfWords(SearchTerm) AS NumberOfTokens
    FROM SearchesRanked
    //WHERE RankBySearchCount <= 10000
;

totalTokens = SELECT
    SUM (SearchCount) AS SearchVolume,
    SUM (NumberOfTokens) AS SumOfTokens
FROM TopSearches_CurrentMonth;

//output Daily data
[Privacy.Asset.NonPersonal]
OUTPUT TopSearches_CurrentMonth
TO SSTREAM @outputTopSearches_Daily
CLUSTERED BY SearchTerm, SearchCount
SORTED BY SearchTerm, SearchCount DESC
WITH STREAMEXPIRY @streamExpiry;

OUTPUT totalTokens
TO SSTREAM @outputTotalTokens;

#CS

public class Helper {
    public static int numberOfWords(string searchTerm) {
        char[] delimiterChars = { ' ', ',', '.', ':', '\t' };

        string[] words = searchTerm.Split(delimiterChars);
        return words.Length;
    }
}
#ENDCS
                                   
                              